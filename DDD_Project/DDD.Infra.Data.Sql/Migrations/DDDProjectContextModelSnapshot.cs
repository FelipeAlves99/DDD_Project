// <auto-generated />
using System;
using DDD.Infra.Data.Sql.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DDD.Infra.Data.Sql.Migrations
{
    [DbContext(typeof(DDDProjectContext))]
    partial class DDDProjectContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DDD.Domain.Entities.CompanyEntity.Atividade_Principal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<int>("CompanyId");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("MainActivity");
                });

            modelBuilder.Entity("DDD.Domain.Entities.CompanyEntity.Atividade_Secundaria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<int>("CompanyId");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("SeundaryActivity");
                });

            modelBuilder.Entity("DDD.Domain.Entities.CompanyEntity.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abertura");

                    b.Property<string>("Bairro");

                    b.Property<string>("Cep");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasMaxLength(14);

                    b.Property<string>("Complemento");

                    b.Property<string>("Data_Situacao");

                    b.Property<string>("Data_Situacao_Especial");

                    b.Property<string>("Efr");

                    b.Property<string>("Email");

                    b.Property<string>("Fantasia");

                    b.Property<string>("Logradouro");

                    b.Property<string>("Motivo_situacao");

                    b.Property<string>("Municipio");

                    b.Property<string>("Natureza_Juridica");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Numero");

                    b.Property<string>("Porte");

                    b.Property<string>("Situacao");

                    b.Property<string>("Situacao_Especial");

                    b.Property<string>("Telefone");

                    b.Property<string>("Tipo");

                    b.Property<string>("Uf")
                        .IsRequired();

                    b.HasKey("Id")
                        .HasName("Id");

                    b.HasIndex("Cnpj")
                        .IsUnique();

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Company");
                });

            modelBuilder.Entity("DDD.Domain.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("BuyValue");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<decimal>("SellValue");

                    b.Property<int>("StorageQuantity");

                    b.HasKey("Id");

                    b.HasIndex("Description")
                        .IsUnique();

                    b.ToTable("Item");
                });

            modelBuilder.Entity("DDD.Domain.Entities.ItemOrder", b =>
                {
                    b.Property<int>("OrderId");

                    b.Property<int>("ItemId");

                    b.Property<int>("Quantity");

                    b.Property<decimal>("TotalLineValue");

                    b.HasKey("OrderId", "ItemId");

                    b.HasIndex("ItemId");

                    b.ToTable("ItemOrder");
                });

            modelBuilder.Entity("DDD.Domain.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId");

                    b.Property<decimal>("Discount");

                    b.Property<DateTime>("OrderDate");

                    b.Property<DateTime>("OrderDelivery");

                    b.Property<decimal>("OrderValue");

                    b.Property<int>("Status");

                    b.Property<decimal>("ValueDiscounted");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("DDD.Domain.Entities.CompanyEntity.Atividade_Principal", b =>
                {
                    b.HasOne("DDD.Domain.Entities.CompanyEntity.Company", "Company")
                        .WithMany("Atividade_Principal")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DDD.Domain.Entities.CompanyEntity.Atividade_Secundaria", b =>
                {
                    b.HasOne("DDD.Domain.Entities.CompanyEntity.Company", "Company")
                        .WithMany("Atividades_Secundarias")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DDD.Domain.Entities.ItemOrder", b =>
                {
                    b.HasOne("DDD.Domain.Entities.Item", "Item")
                        .WithMany("ItemOrder")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DDD.Domain.Entities.Order", "Order")
                        .WithMany("ItemOrder")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DDD.Domain.Entities.Order", b =>
                {
                    b.HasOne("DDD.Domain.Entities.CompanyEntity.Company", "Company")
                        .WithMany("Orders")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
